

#Challenge 1
 #we want to reward our users who have been around the longest, Find the 5 oldest users.

 select  username , created_at  from users 
 order by created_at  
 limit 5;
 
#Challenge 2
 #What day of the week do most users register on? we need to figure out when to schedule an ad campaign
 
 select  count(*) as total_count,  DAYNAME(created_at) as day, created_at from users 
 group by day
 order by total_count desc;
 
#Challenge 3
 #We want to target our inactive users with an email campaign. Find the users who have never posted a photo.
 
 select username, image_url from users
 LEFT join photos on photos.user_id= users.id
 where image_url is null;
 

#Challenge 4
#We are running a new contest to see who can get the most likes on single photo. Who won?


SELECT 
    username, photos.id, photos.image_url, 
    COUNT(*) AS total
FROM photos
INNER JOIN likes
ON likes.photo_id = photos.id
INNER JOIN users
ON photos.user_id = users.id
GROUP BY photos.id
ORDER BY total DESC
LIMIT 1;


select count(*) as t, photo_id, image_url from photos
join likes
on likes.photo_id = photos.id
group by photo_id
order by t desc;

select username,count(*) as t, photo_id, image_url from photos
join likes
on likes.photo_id = photos.id
join users
on users.id= photos.user_id
group by photo_id
order by t desc 
limit 1;

#Challenge 5
#Our investors want to know How many times does the average user post?


select image_url, user_id, count(image_url) as Total from photos
group by user_id;


select 
( select count(*) from photos)/( select count(*) from users) as avg;


#Challenge 6
# a brand wants to know which hashtag to use in a post
what are the top 5 most commonly used hastags

desc tags;
select tag_name , count(tag_name) as total from tags join photo_tags on tags.id = photo_tags.tag_id
group by tag_id
order by total desc limit 5;

#Challenge 7
#Find users who have liked every single photo on the site

select * from likes;
select users.username, user_id, photo_id , count(*) as total from likes
left join users
on likes.user_id = users.id
group by users.username
order by total desc;

select users.username , count(*) as total from likes
left join users
on likes.user_id = users.id
group by users.username
order by total desc limit 13;

SELECT username, 
       Count(*) AS num_likes 
FROM   users 
       INNER JOIN likes 
               ON users.id = likes.user_id 
GROUP  BY likes.user_id 
HAVING num_likes = (SELECT Count(*) 
                    FROM   photos); 
